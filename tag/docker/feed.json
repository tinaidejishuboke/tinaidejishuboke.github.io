{
    "version": "https://jsonfeed.org/version/1",
    "title": "路宇航的博客 • All posts by \"docker\" tag",
    "description": "",
    "home_page_url": "https://github.com/tinaidejishuboke/tinaidejishuboke.github.io",
    "items": [
        {
            "id": "https://github.com/tinaidejishuboke/tinaidejishuboke.github.io/2019/02/13/docker%E5%AE%B9%E5%99%A8%E5%BC%8F%E9%83%A8%E7%BD%B2/",
            "url": "https://github.com/tinaidejishuboke/tinaidejishuboke.github.io/2019/02/13/docker%E5%AE%B9%E5%99%A8%E5%BC%8F%E9%83%A8%E7%BD%B2/",
            "title": "docker容器式部署",
            "date_published": "2019-02-13T07:19:26.000Z",
            "content_html": "<h1 id=\"docker容器\"><a class=\"markdownIt-Anchor\" href=\"#docker容器\">#</a> docker 容器</h1>\n<p>容器是镜像的一个运行实例。所不同的是，镜像是静态的只读文件，而容器带有运行时需要的可写文件层。如果认为虚拟机是模拟运行的一整套操作系统（包括内核、应用运行态环境和其他系统环境）和跑在上面的应用，那么 Docker 容器就是独立运行的一个（或一组）应用，以及它们必需的运行环境。</p>\n<h3 id=\"下载容器\"><a class=\"markdownIt-Anchor\" href=\"#下载容器\">#</a> 下载容器</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动容器\"><a class=\"markdownIt-Anchor\" href=\"#启动容器\">#</a> 启动容器</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看docker状态-绿色启动-灰色停止\"><a class=\"markdownIt-Anchor\" href=\"#查看docker状态-绿色启动-灰色停止\">#</a> 查看 docker 状态 绿色启动 灰色停止</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status docker</span><br></pre></td></tr></table></figure>\n<h1 id=\"docker镜像\"><a class=\"markdownIt-Anchor\" href=\"#docker镜像\">#</a> docker 镜像</h1>\n<h3 id=\"下载镜像\"><a class=\"markdownIt-Anchor\" href=\"#下载镜像\">#</a> 下载镜像</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull 镜像名</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看镜像\"><a class=\"markdownIt-Anchor\" href=\"#查看镜像\">#</a> 查看镜像</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br></pre></td></tr></table></figure>\n<h1 id=\"dockerfile\"><a class=\"markdownIt-Anchor\" href=\"#dockerfile\">#</a> Dockerfile</h1>\n<h3 id=\"什么是dockerfile\"><a class=\"markdownIt-Anchor\" href=\"#什么是dockerfile\">#</a> 什么是 dockerfile?</h3>\n<p>Dockerfile 是一个包含用于组合映像的命令的文本文档。可以使用在命令行中调用任何命令。 Docker 通过读取 Dockerfile 中的指令自动生成映像。<br>\ndocker build 命令用于从 Dockerfile 构建映像。可以在 docker build 命令中使用 - f 标志指向文件系统中任何位置的 Dockerfile。</p>\n<h3 id=\"dockerfile的基本结构\"><a class=\"markdownIt-Anchor\" href=\"#dockerfile的基本结构\">#</a> Dockerfile 的基本结构</h3>\n<p>Dockerfile 一般分为四部分：基础镜像信息、维护者信息、镜像操作指令和容器启动时执行指令，’#’ 为 Dockerfile 中的注释。</p>\n<h3 id=\"dockerfile文件说明\"><a class=\"markdownIt-Anchor\" href=\"#dockerfile文件说明\">#</a> Dockerfile 文件说明</h3>\n<p>Docker 以从上到下的顺序运行 Dockerfile 的指令。为了指定基本映像，第一条指令必须是 FROM。一个声明以＃字符开头则被视为注释。可以在 Docker 文件中使用 RUN，CMD，FROM，EXPOSE，ENV 等指令。</p>\n<h3 id=\"from指定基础镜像必须为第一个命令\"><a class=\"markdownIt-Anchor\" href=\"#from指定基础镜像必须为第一个命令\">#</a> FROM：指定基础镜像，必须为第一个命令</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\">　　FROM &lt;image&gt;</span><br><span class=\"line\">　　FROM &lt;image&gt;:&lt;tag&gt;</span><br><span class=\"line\">　　FROM &lt;image&gt;@&lt;digest&gt;</span><br><span class=\"line\">示例：</span><br><span class=\"line\">　　FROM mysql:5.6</span><br><span class=\"line\">注：</span><br><span class=\"line\">　　tag或digest是可选的，如果不使用这两个值时，会使用latest版本的基础镜像</span><br></pre></td></tr></table></figure>\n<h3 id=\"maintainer-维护者信息\"><a class=\"markdownIt-Anchor\" href=\"#maintainer-维护者信息\">#</a> MAINTAINER: 维护者信息</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\">    MAINTAINER &lt;name&gt;</span><br><span class=\"line\">示例：</span><br><span class=\"line\">    MAINTAINER Jasper Xu</span><br><span class=\"line\">    MAINTAINER sorex@163.com</span><br><span class=\"line\">    MAINTAINER Jasper Xu &lt;sorex@163.com&gt;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "Docker"
            ]
        }
    ]
}