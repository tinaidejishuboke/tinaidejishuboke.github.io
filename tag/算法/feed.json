{
    "version": "https://jsonfeed.org/version/1",
    "title": "路宇航的博客 • All posts by \"算法\" tag",
    "description": "",
    "home_page_url": "https://github.com/tinaidejishuboke/tinaidejishuboke.github.io",
    "items": [
        {
            "id": "https://github.com/tinaidejishuboke/tinaidejishuboke.github.io/2020/05/26/%E9%9B%AA%E8%8A%B1%E7%AE%97%E6%B3%95%E3%80%90snowflake%E3%80%91/",
            "url": "https://github.com/tinaidejishuboke/tinaidejishuboke.github.io/2020/05/26/%E9%9B%AA%E8%8A%B1%E7%AE%97%E6%B3%95%E3%80%90snowflake%E3%80%91/",
            "title": "雪花算法【snowflake】",
            "date_published": "2020-05-26T05:54:43.000Z",
            "content_html": "<h3 id=\"雪花算法\"><a class=\"markdownIt-Anchor\" href=\"#雪花算法\">#</a> 雪花算法</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200921211050182.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTc3ODM4,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"> 为什么需要分布式全局唯一 ID 以及分布式 ID 的业务需求？</p>\n<ul>\n<li>在复杂分布式系统中，往往需要对大量对数据和消息进行标识</li>\n<li>如在美团、支付、餐饮 中 系统的数据日渐增长，对数据分库分表需要有一个唯一来标识一条数据或消息</li>\n<li>此时一个能够生成全局唯一 ID 的系统是非常有必要的</li>\n</ul>\n<h4 id=\"id生成规则部分硬性要求\"><a class=\"markdownIt-Anchor\" href=\"#id生成规则部分硬性要求\">#</a> ID 生成规则部分硬性要求</h4>\n<ul>\n<li>全局唯一 ：不能出现重复的 ID，要 唯一标识</li>\n<li>趋势递增 ：在 Mysql 的 InnoDB 引擎使用的是聚集索引，由于多数 RDBMS 使用的是 Btree 数据结构来存储数据，在主键的选择上面我们应该尽量使用有序的主键保证数据写入</li>\n<li>单调递增 ：保证下一个 ID 一定大于上一个 ID，例如事物版本号，增量消息</li>\n<li>信息安全 ：如果 ID 是连续的，恶意用户的扒取数据就非常容易来，直接按照顺序下载指定的 URL，如果是订单号就更危险来，竞争对手可以知道我们一天的单量，所以在一些应用场景下，需要 ID 不规则</li>\n<li>含时间戳 ：这样就能够在开发中快速了解这个分布式 id 的生成时间</li>\n</ul>\n<hr>\n<h4 id=\"id生成系统的可用性要求\"><a class=\"markdownIt-Anchor\" href=\"#id生成系统的可用性要求\">#</a> ID 生成系统的可用性要求</h4>\n<ul>\n<li>高可用 ：发一个获取分布式 ID 的请求，服务器就要保证 99.99% 的情况下给我创建一个唯一分布式 ID</li>\n<li>低延迟 ：发一个获取分布式 ID 的请求，服务器就是要快，极速</li>\n<li>高 QPS ：假如并发一口气 10 万个创建分布式 ID 请求同时杀过来，服务器要顶的住一下子成功创建 10w 个分布式 ID</li>\n</ul>\n<h4 id=\"我们平时的方案\"><a class=\"markdownIt-Anchor\" href=\"#我们平时的方案\">#</a> 我们平时的方案</h4>\n<p>UUID 、 数据库自增主键 、基于 Redis 生成全局 ID 策略</p>\n<p>弊端</p>\n<blockquote>\n<p>UUID 不能生成顺序，递增的数据，并且长，不是很推荐</p>\n</blockquote>\n<blockquote>\n<p>数据库自增，集群多的情况下，扩容简直就是噩梦</p>\n</blockquote>\n<blockquote>\n<p>Redis 使用 Redis INCR 和 INCRBY 实现</p>\n</blockquote>\n<h4 id=\"snowflake雪花算法\"><a class=\"markdownIt-Anchor\" href=\"#snowflake雪花算法\">#</a> snowflake（雪花算法）</h4>\n<p>Twitter 的分布式自增 ID 算法：snowflake（雪花算法）</p>\n<h5 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\">#</a> 概述</h5>\n<blockquote>\n<p>最初 Twitter 把存储系统从 Mysql 迁移到 Cassandra (由 Facebook 开发一套开源分布式 Nosql 系统) 因为 Cassandra 没有顺序 ID 生成机制，所以开发成了这样一套全局唯一 ID 生成服务</p>\n</blockquote>\n<p>Twitter 的分布式雪花算法 SnowFlake ， 经测试 snowflake 每秒能产出 26 万个自增可排序的 ID</p>\n<ol>\n<li>twitter 的 SnowFlake 生成 ID 能够按照时间有序生成</li>\n<li>SnowFlake 算法生成 id 的结果是一个 64 bit 大小的整数，为一个 Long 型（转换成字符后长度 19 位）</li>\n<li>分布式系统不会产生 ID 碰撞（由 datacenter 和 workerld 区分）并且效率较高</li>\n</ol>\n<h5 id=\"结构\"><a class=\"markdownIt-Anchor\" href=\"#结构\">#</a> 结构</h5>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200921220349644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTc3ODM4,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>号段解析：</p>\n<p>1bit ，</p>\n<ul>\n<li>不用，因为二进制中最高位是符号位，毫秒级，生成的 id 一般用整数，所以最高位 0</li>\n</ul>\n<p>41bit - 时间戳，用来记录时间戳，毫秒级，</p>\n<ul>\n<li>41 位可以表示 2 ^ {41}-1 个数字</li>\n<li>如果只用来表示正整数 (计算机中正整数包含 0)。可以表示数值范围：0 至 2^{41}-1 , 减 1 是因为表示的数值是从 0 开始算的 ，而不是 1.</li>\n<li>也就是说 41 位可以表示 2 ^ <ruby>41}-1 个毫秒的值，装换成单位年则 （2<rp>【</rp><rt>{41</rt><rp>】</rp></ruby>-1）/ （1000 * 60 * 60 * 24 * 365）=69 年</li>\n</ul>\n<p>10bit- 工作机器 ID，用来记录工作机器 ID</p>\n<ul>\n<li>可以部署在 2^{10} = 1024 个节点，包括 5 位 datacenterId 和 5 位的 workeId</li>\n<li>5 位（bit）可以表示的最大正整数是 2 ^ {5}-1 =31 , 即可以用 0、1、2、3…31 这 32 个数字，来表示不同的 datacenterId 或者 workId</li>\n</ul>\n<p>12 bit - 序列号，序列号，用来记录同毫秒内产生的不同的 id。</p>\n<ul>\n<li>12 位可以表示的最大正整数是 2^{12}-1 = 4095 即可以用 0、1、2、34094 这 4095 个数字来表示同一机器同一时间（毫秒）产生的 4095 个 ID 序号</li>\n</ul>\n<hr>\n<p>SnowFlake 可以保证</p>\n<ul>\n<li>所有生成的 id 按时间趋势递增</li>\n<li>整个分布式系统内不会产生重复的 id</li>\n</ul>\n<h5 id=\"源码\"><a class=\"markdownIt-Anchor\" href=\"#源码\">#</a> 源码</h5>\n<p>twitter 的雪花算法：<a href=\"https://github.com/twitter-archive/snowflake\">https://github.com/twitter-archive/snowflake</a></p>\n<p>GitHub 上 java 版的雪花算法： <a href=\"https://github.com/beyondfengyu/SnowFlake/blob/master/SnowFlake.java\">https://github.com/beyondfengyu/SnowFlake/blob/master/SnowFlake.java</a> <a href=\"https://github.com/beyondfengyu/SnowFlake/blob/master/SnowFlake.java\">https://github.com/souyunku/SnowFlake/blob/master/SnowFlake.java</a></p>\n<p>java 版❄️雪花算法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SnowflakeIdWorker</span> </span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">// ==============================Fields==================</span></span><br><span class=\"line\">    <span class=\"comment\">/** 开始时间截 (2019-08-06) */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> twepoch = <span class=\"number\">1565020800000L</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 机器id所占的位数 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> workerIdBits = <span class=\"number\">5L</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 数据标识id所占的位数 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> datacenterIdBits = <span class=\"number\">5L</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 支持的最大机器id，结果是31 (这个移位算法可以很快的计算出几位二进制数所能表示的最大十进制数) */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> maxWorkerId = -<span class=\"number\">1L</span> ^ (-<span class=\"number\">1L</span> &lt;&lt; workerIdBits);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 支持的最大数据标识id，结果是31 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> maxDatacenterId = -<span class=\"number\">1L</span> ^ (-<span class=\"number\">1L</span> &lt;&lt; datacenterIdBits);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 序列在id中占的位数 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> sequenceBits = <span class=\"number\">12L</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 机器ID向左移12位 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> workerIdShift = sequenceBits;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 数据标识id向左移17位(12+5) */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> datacenterIdShift = sequenceBits + workerIdBits;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 时间截向左移22位(5+5+12) */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 生成序列的掩码，这里为4095 (0b111111111111=0xfff=4095) */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> sequenceMask = -<span class=\"number\">1L</span> ^ (-<span class=\"number\">1L</span> &lt;&lt; sequenceBits);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 工作机器ID(0~31) */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">long</span> workerId;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 数据中心ID(0~31) */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">long</span> datacenterId;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 毫秒内序列(0~4095) */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">long</span> sequence = <span class=\"number\">0L</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/** 上次生成ID的时间截 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">long</span> lastTimestamp = -<span class=\"number\">1L</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">     <span class=\"comment\">//==============================Constructors====================</span></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 构造函数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> workerId 工作ID (0~31)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> datacenterId 数据中心ID (0~31)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SnowflakeIdWorker</span><span class=\"params\">(<span class=\"keyword\">long</span> workerId, <span class=\"keyword\">long</span> datacenterId)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (workerId &gt; maxWorkerId || workerId &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(String.format(<span class=\"string\">&quot;worker Id can&#x27;t be greater than %d or less than 0&quot;</span>, maxWorkerId));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (datacenterId &gt; maxDatacenterId || datacenterId &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(String.format(<span class=\"string\">&quot;datacenter Id can&#x27;t be greater than %d or less than 0&quot;</span>, maxDatacenterId));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.workerId = workerId;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.datacenterId = datacenterId;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// ==============================Methods=================================</span></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获得下一个ID (该方法是线程安全的)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> SnowflakeId</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">long</span> <span class=\"title\">nextId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> timestamp = timeGen();</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//如果当前时间小于上一次ID生成的时间戳，说明系统时钟回退过这个时候应当抛出异常</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (timestamp &lt; lastTimestamp) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(</span><br><span class=\"line\">                    String.format(<span class=\"string\">&quot;Clock moved backwards.  Refusing to generate id for %d milliseconds&quot;</span>, lastTimestamp - timestamp));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//如果是同一时间生成的，则进行毫秒内序列</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (lastTimestamp == timestamp) &#123;</span><br><span class=\"line\">            sequence = (sequence + <span class=\"number\">1</span>) &amp; sequenceMask;</span><br><span class=\"line\">            <span class=\"comment\">//毫秒内序列溢出</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sequence == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//阻塞到下一个毫秒,获得新的时间戳</span></span><br><span class=\"line\">                timestamp = tilNextMillis(lastTimestamp);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//时间戳改变，毫秒内序列重置</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            sequence = <span class=\"number\">0L</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//上次生成ID的时间截</span></span><br><span class=\"line\">        lastTimestamp = timestamp;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">//移位并通过或运算拼到一起组成64位的ID</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ((timestamp - twepoch) &lt;&lt; timestampLeftShift) <span class=\"comment\">//</span></span><br><span class=\"line\">                | (datacenterId &lt;&lt; datacenterIdShift) <span class=\"comment\">//</span></span><br><span class=\"line\">                | (workerId &lt;&lt; workerIdShift) <span class=\"comment\">//</span></span><br><span class=\"line\">                | sequence;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 阻塞到下一个毫秒，直到获得新的时间戳</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> lastTimestamp 上次生成ID的时间截</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 当前时间戳</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">long</span> <span class=\"title\">tilNextMillis</span><span class=\"params\">(<span class=\"keyword\">long</span> lastTimestamp)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> timestamp = timeGen();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (timestamp &lt;= lastTimestamp) &#123;</span><br><span class=\"line\">            timestamp = timeGen();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> timestamp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 返回以毫秒为单位的当前时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 当前时间(毫秒)</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">long</span> <span class=\"title\">timeGen</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> System.currentTimeMillis();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">//==============================Test=============================================</span></span><br><span class=\"line\">    <span class=\"comment\">/** 测试 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SnowflakeIdWorker idWorker = <span class=\"keyword\">new</span> SnowflakeIdWorker(<span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> id = idWorker.nextId();</span><br><span class=\"line\">            System.out.println(Long.toBinaryString(id));</span><br><span class=\"line\">            System.out.println(id);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"springboot整合雪花算法\"><a class=\"markdownIt-Anchor\" href=\"#springboot整合雪花算法\">#</a> springboot 整合雪花算法</h5>\n<ol>\n<li>新建项目 snowflake</li>\n<li>pom</li>\n</ol>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">    &lt;!--hutool 引入糊涂工具包，测试雪花算法--&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;cn.hutool&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;hutool-captcha&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;version&gt;5.3.8&lt;/version&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;optional&gt;true&lt;/optional&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;scope&gt;test&lt;/scope&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>yml</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server:</span><br><span class=\"line\">  port: <span class=\"number\">7777</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>新建 utils 包 IdGeneratorSnowflake 类</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IdGeneratorSnowflake</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">long</span> workerId = <span class=\"number\">0</span>;  <span class=\"comment\">//第几号机房</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">long</span> datacenterId = <span class=\"number\">1</span>;  <span class=\"comment\">//第几号机器</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Snowflake snowflake = IdUtil.createSnowflake(workerId, datacenterId);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostConstruct</span>  <span class=\"comment\">//构造后开始执行，加载初始化工作</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//获取本机的ip地址编码</span></span><br><span class=\"line\">            workerId = NetUtil.ipv4ToLong(NetUtil.getLocalhostStr());</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;当前机器的workerId: &quot;</span> + workerId);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            log.warn(<span class=\"string\">&quot;当前机器的workerId获取失败 ----&gt; &quot;</span> + e);</span><br><span class=\"line\">            workerId = NetUtil.getLocalhostStr().hashCode();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">long</span> <span class=\"title\">snowflakeId</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> snowflake.nextId();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">long</span> <span class=\"title\">snowflakeId</span><span class=\"params\">(<span class=\"keyword\">long</span> workerId, <span class=\"keyword\">long</span> datacenterId)</span></span>&#123;</span><br><span class=\"line\">        Snowflake snowflake = IdUtil.createSnowflake(workerId, datacenterId);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> snowflake.nextId();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//测试</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">new</span> IdGeneratorSnowflake().snowflakeId());   <span class=\"comment\">//1277896081711169536</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>新建 service 包 OrderService 接口 与 service.impl 包 OrderServiceImpl 实现 OrderService 的接口</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">OrderService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">getIDBySnowFlake</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OrderServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">OrderService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> IdGeneratorSnowflake idGenerator;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getIDBySnowFlake</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//新建线程池（5个线程）</span></span><br><span class=\"line\">        ExecutorService threadPool = Executors.newFixedThreadPool(<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">20</span>; i++) &#123;</span><br><span class=\"line\">            threadPool.submit(() -&gt; &#123;</span><br><span class=\"line\">                System.out.println(idGenerator.snowflakeId());</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        threadPool.shutdown();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;hello snowflake&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>新建 controller 包 OrderController</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OrderController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> OrderService orderService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/snowflake&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">index</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> orderService.getIDBySnowFlake();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>主启动类</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApp</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(MainApp.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>启动项目 浏览器输入 http://localhost:7777/snowflake</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200921223551325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTc3ODM4,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h5 id=\"优缺点\"><a class=\"markdownIt-Anchor\" href=\"#优缺点\">#</a> 优缺点</h5>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200921223628111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTc3ODM4,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>解决时钟回拨问题</p>\n<ul>\n<li>百度开源的分布式唯一 ID 生成器 UidGenerator</li>\n<li>美团开源的分布式 ID 生成系统 Leaf</li>\n</ul>\n",
            "tags": [
                "算法"
            ]
        }
    ]
}